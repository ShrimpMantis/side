{"version":3,"sources":["styles/PropertyGrid.module.css","styles/SideNavigation.module.css","styles/Home.module.css","styles/Menu.module.css","styles/Layout.module.css","styles/AboutUs.module.css","styles/Header.module.css","styles/PropertyCard.module.css","models/measurementEnum.ts","components/aboutus.tsx","operators/massageData.ts","services/data.service.ts","assets/heart-fill.svg","assets/heart-stroke.svg","components/propertyCard.tsx","components/propertyGrid.tsx","components/sideNavigation.tsx","components/home.tsx","components/layout.tsx","components/menu.tsx","components/pageHeader.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Measurements","AboutUs","className","styles","container","massageData","data","map","currElement","index","address","unit","streetName","city","state","listPrice","givenListedDate","listDate","Date","getMonth","getDate","getFullYear","bedrooms","property","baths","full","bathsFull","half","bathsHalf","area","photos","forEach","photo","photoData","description","includes","path","push","id","listingId","favorite","getData","a","customheaders","Headers","append","btoa","fetch","method","headers","response","json","getCacheData","cacheData","localStorage","getItem","JSON","parse","saveFavoriteData","setItem","stringify","removeFavoriteData","removeItem","PropertyCard","props","totalBath","propValue","useState","totalBathValue","setTotalBath","isPropertyFavorite","setFavorite","useEffect","bathrooms","iconStyleNotFavorite","content","heartEmpty","iconStyleFavorite","heartFill","favoriteIcon","style","onClick","isFav","storagePropValue","isFavoriteHandler","favoriteClicked","pictureWrapper","imageElement","src","alt","informationNuggetsWrapper","nugget","squareFeet","priceInformation","toLocaleString","propertyAddress","propertySubtext","toString","PropertyGrid","propValues","properties","propertyGrid","element","cardWrapper","propertyObj","header","headerText","propertyGridWrapper","SideNavigation","propertyListings","listings","listingWrapper","Home","homeData","setHomeData","filteredListings","setListings","propertyData","result","properResult","setDataInPlaces","fetchData","filteredData","slice","sideNav","Layout","routeValues","key","component","route","withRouter","menusComponent","text","menu","menuItem","to","menuContainer","PageHeader","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","console","log"],"mappings":"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","file":"static/js/main.64948f86.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"PropertyGrid_header__3kYaV\",\"cardWrapper\":\"PropertyGrid_cardWrapper__1LEHd\",\"propertyGridWrapper\":\"PropertyGrid_propertyGridWrapper__3WT-Z\",\"headerText\":\"PropertyGrid_headerText__32OI3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SideNavigation_container__QpiwE\",\"header\":\"SideNavigation_header__3uAWg\",\"listings\":\"SideNavigation_listings__15oGW\",\"listingWrapper\":\"SideNavigation_listingWrapper__2ab_O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Home_container__2m2m0\",\"sideNav\":\"Home_sideNav__1B2YI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuContainer\":\"Menu_menuContainer__2Pojh\",\"menuItem\":\"Menu_menuItem__2s0Uz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Layout_container__3vGf1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AboutUs_container__QdgRn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuContainer\":\"Header_menuContainer__3WSfr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PropertyCard_container__36zhf\",\"pictureWrapper\":\"PropertyCard_pictureWrapper__WjtzK\",\"informationNuggetsWrapper\":\"PropertyCard_informationNuggetsWrapper__3_xgC\",\"priceInformation\":\"PropertyCard_priceInformation__1t7G2\",\"propertyAddress\":\"PropertyCard_propertyAddress__2HNzc\",\"propertySubtext\":\"PropertyCard_propertySubtext__2-pKE\",\"imageElement\":\"PropertyCard_imageElement__18x_r\",\"favorite\":\"PropertyCard_favorite__2Vd3b\",\"favoriteIcon\":\"PropertyCard_favoriteIcon__3DWy6\",\"nugget\":\"PropertyCard_nugget__7Uf8C\"};","export enum Measurements{\r\n    squareFeet=\"Sq Ft\",\r\n    meters=\"Meters\",\r\n}","import styles from \"./../styles/AboutUs.module.css\";\r\n\r\nconst  AboutUs=() =>{\r\n  return (\r\n   <div className={styles.container}>\r\n       Created by jahnavi mahanta\r\n   </div>\r\n  );\r\n}\r\n\r\n export default AboutUs;","import { Property } from \"models\";\r\nimport { Photo } from \"models/photo\";\r\n\r\nexport const massageData=(data:Array<any>):Array<Property>=>{\r\n\r\n    const massagedData= data.map((currElement, index, data)=>{\r\n        let address= `${currElement.address.unit || \"\"} ${currElement.address.streetName ||\"\"}, ${currElement.address.city || \"\"},${currElement.address.state || \"\"}`;\r\n        let listPrice =currElement.listPrice;\r\n        let givenListedDate= currElement.listDate ? new Date(currElement.listDate): new Date();\r\n        let listDate= `${givenListedDate.getMonth()}/${givenListedDate.getDate()}/${givenListedDate.getFullYear()}`;\r\n        let bedrooms= currElement.property.bedrooms;\r\n        let baths= {full: currElement.property.bathsFull ,half: currElement.property.bathsHalf}\r\n        let area= currElement.property.area;\r\n        let photos:Array<Photo>=[];\r\n         currElement.photos.forEach((photo:string, index:number)=>{\r\n           const isInside= photo.includes(\"inside\");\r\n           const photoData:Photo= {\r\n                    description: isInside? `inside ${currElement.address.city} house`:`outside ${currElement.address.city} house`,\r\n                    path: photo\r\n            }\r\n            photos.push(photoData);\r\n        });\r\n        let id= currElement.listingId;\r\n        const propertyData:Property={\r\n            address:address,\r\n            area:area,\r\n            baths:baths,\r\n            bedrooms:bedrooms,\r\n            listDate:listDate,\r\n            listPrice:listPrice,\r\n            photos:photos,\r\n            id: id,\r\n            favorite:false\r\n        }\r\n\r\n        return propertyData;\r\n    });\r\n\r\n    return massagedData;\r\n\r\n}","import { url } from \"inspector\";\r\nimport { Property } from \"models\";\r\n\r\nexport const  getData= async ()=>{\r\n    const url=\"https://api.simplyrets.com/properties\";\r\n    const customheaders= new Headers()\r\n    customheaders.append('Content-Type','application/json');\r\n    customheaders.append('Accept','application/json');\r\n    customheaders.append('Authorization',`Basic ${btoa('simplyrets:simplyrets')}`);\r\n\r\n    const response=  await fetch(url,{\r\n        method:\"GET\",\r\n        headers: customheaders,\r\n    });\r\n\r\n    return response.json();\r\n}\r\n\r\nexport const cachePropertyData=(property:Property)=>{\r\n    localStorage.setItem(\"response\", JSON.stringify(property));\r\n}\r\n\r\nexport const getCacheData=()=>{\r\n    let cacheData= localStorage.getItem(\"response\");\r\n    return cacheData?JSON.parse(cacheData): null;\r\n}\r\n\r\nexport const saveFavoriteData=(property:Property)=>{\r\n    localStorage.setItem(`favProperty-${property.id}`,  JSON.stringify(property));\r\n}\r\n\r\nexport const removeFavoriteData=(property:Property)=>{\r\n    localStorage.removeItem(`favProperty-${property.id}`);\r\n}","export default __webpack_public_path__ + \"static/media/heart-fill.252a36b8.svg\";","export default __webpack_public_path__ + \"static/media/heart-stroke.b3b99e7a.svg\";","import { Property } from 'models';\r\nimport { Bath } from 'models/bath';\r\nimport { Measurements } from 'models/measurementEnum';\r\nimport { useEffect, useState } from 'react';\r\nimport { collapseTextChangeRangesAcrossMultipleVersions } from 'typescript';\r\nimport styles from \"./../styles/PropertyCard.module.css\";\r\nimport heartFill from '../assets/heart-fill.svg';\r\nimport heartEmpty from '../assets/heart-stroke.svg';\r\n\r\nconst  PropertyCard = (props:{property:Property,  isFavoriteHandler:(id:Property)=>void }) =>{\r\n\r\n    let totalBath=0;\r\n   \r\n    let propValue= props.property;\r\n    const[totalBathValue, setTotalBath]=useState<number>(0);\r\n    const [isPropertyFavorite, setFavorite]=useState<Boolean>(false);\r\n   \r\n    useEffect(()=>{\r\n        let bathrooms:Bath= propValue.baths;\r\n        if(bathrooms.full && bathrooms.half){\r\n            totalBath= bathrooms.full + 0.5*(bathrooms.half);\r\n         }else if(bathrooms.full && !bathrooms.half){\r\n                totalBath= bathrooms.full;\r\n         }\r\n         setTotalBath(totalBath);\r\n    },[]);\r\n\r\n\r\n    const favoriteClicked=()=>{\r\n      \r\n        let isFav=!isPropertyFavorite;\r\n        let storagePropValue= {...propValue};\r\n        storagePropValue.favorite=isFav;\r\n        setFavorite(isFav);\r\n        props.isFavoriteHandler(storagePropValue);\r\n    };\r\n\r\n\r\n    const iconStyleNotFavorite={\r\n        content: `url(${heartEmpty})`\r\n    };\r\n    const iconStyleFavorite={\r\n        content: `url(${heartFill})`\r\n    }\r\n   \r\n  return (\r\n   <div className={styles.container}>\r\n        <div className={styles.favorite}>\r\n            <div className={styles.favoriteIcon}  style={isPropertyFavorite?iconStyleFavorite:iconStyleNotFavorite}\r\n             id={propValue.id} onClick={()=>favoriteClicked()}></div>\r\n        </div>\r\n        <div className={styles.pictureWrapper}>\r\n            <img className={styles.imageElement} src={propValue.photos[0].path} alt={propValue.photos[0].description}/>\r\n        </div>\r\n        <div className={styles.informationNuggetsWrapper}>\r\n            <span className={styles.nugget}>{propValue.bedrooms}</span><span>BR</span>\r\n            <span className={styles.nugget}>|</span>\r\n\r\n            <span className={styles.nugget}>{totalBathValue}</span><span>Bath</span>\r\n            <span className={styles.nugget}>|</span>\r\n\r\n            <span className={styles.nugget}>{propValue.bedrooms}</span><span>{Measurements.squareFeet}</span>\r\n\r\n        </div>\r\n        <div className={styles.priceInformation}>\r\n            ${propValue.listPrice.toLocaleString()}\r\n        </div>\r\n        <div className={styles.propertyAddress}>\r\n            {propValue.address}\r\n        </div>\r\n        <div className={styles.propertySubtext}>\r\n            {propValue.listDate.toString()}\r\n        </div>\r\n   </div>\r\n  );\r\n}\r\n\r\n export default PropertyCard;","import { Property } from \"models\";\r\nimport PropertyCard from \"./propertyCard\";\r\nimport styles from './../styles/PropertyGrid.module.css';\r\nimport { removeFavoriteData, saveFavoriteData } from \"services\";\r\n\r\nconst PropertyGrid = (props:{properties:Array<Property> }) => {\r\n   const propValues= props.properties;\r\n  \r\n   const favoriteCallBackHandler=(propertyObj:Property)=>{\r\n       propertyObj.favorite?saveFavoriteData(propertyObj):removeFavoriteData(propertyObj);\r\n    }  \r\n \r\n\r\n   const propertyGrid= propValues.map((element:Property,index, props)=>{\r\n        return (\r\n             <div className={styles.cardWrapper} key={`propertyWrapper-${index}`}>\r\n                   <PropertyCard  isFavoriteHandler={(id:Property)=>{ favoriteCallBackHandler(id)}} \r\n                   property={element} key={`propertyCard-${index}`}/>\r\n             </div>\r\n              \r\n        );\r\n    });\r\n\r\n    return(\r\n        <>\r\n          <div className={styles.header}>\r\n             <div className={styles.headerText}>Property Listings</div> \r\n          </div>\r\n          <div className={styles.propertyGridWrapper}>\r\n            {propertyGrid}\r\n          </div>\r\n        </> \r\n        );\r\n}\r\n\r\nexport default PropertyGrid;","import { Property } from 'models';\r\nimport React from 'react';\r\nimport { removeFavoriteData, saveFavoriteData } from 'services';\r\nimport styles from './../styles/SideNavigation.module.css';\r\nimport PropertyCard from './propertyCard';\r\nimport PropertyGrid from './propertyGrid';\r\n\r\nconst SideNavigation = (props: { listings: Array<Property> | undefined }) => {\r\n  const favoriteCallBackHandler = (propertyObj: Property) => {\r\n    if (propertyObj.favorite) {\r\n      saveFavoriteData(propertyObj);\r\n    } else {\r\n      removeFavoriteData(propertyObj);\r\n    }\r\n  };\r\n\r\n  const propertyListings = props.listings?.map((currElement, index) => {\r\n    return (\r\n      <div className={styles.listingWrapper} key={`listingWrapper-${index}`}>\r\n        <PropertyCard\r\n          isFavoriteHandler={(id) => {\r\n            favoriteCallBackHandler(id);\r\n          }}\r\n          property={currElement}\r\n        />\r\n      </div>\r\n    );\r\n  });\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.header}>Property Listings</div>\r\n      <div className={styles.listings}>{propertyListings}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SideNavigation;\r\n","import { Property } from 'models';\r\nimport { massageData } from 'operators';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { cachePropertyData, getCacheData, getData } from 'services';\r\nimport styles from \"./../styles/Home.module.css\";\r\nimport PropertyGrid from './propertyGrid';\r\nimport SideNavigation from './sideNavigation';\r\n\r\nconst  Home= () =>{\r\n    const [homeData, setHomeData]=useState<any>([]);\r\n    const [filteredListings, setListings]=useState<Array<Property>>();\r\n\r\n useEffect(()=>{\r\n     const fetchData= async ()=>{\r\n         const propertyData= getCacheData();\r\n         if(propertyData==null){\r\n            var result= await getData();\r\n            cachePropertyData(result);\r\n            var properResult= massageData(result);\r\n            setDataInPlaces(properResult);\r\n         }else{\r\n            var properResult= massageData(propertyData);\r\n            setDataInPlaces(properResult);\r\n         }\r\n     }\r\n\r\n     fetchData();\r\n },[]);\r\n\r\n const setDataInPlaces=(properResult:Array<Property>)=>{\r\n    setHomeData(properResult);\r\n    var filteredData= properResult.slice(0,3);\r\n    setListings(filteredData);\r\n }\r\n\r\n  return (\r\n      <>\r\n        <div className={styles.container}>\r\n            <PropertyGrid properties={homeData}/>\r\n        </div>\r\n        <div className={styles.sideNav}>\r\n            <SideNavigation listings ={filteredListings}/>\r\n        </div>\r\n     </>\r\n  );\r\n}\r\n\r\n export default Home;","import React from 'react';\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport styles from \"./../styles/Layout.module.css\";\r\nimport AboutUs from './aboutus';\r\nimport Home from './home';\r\n\r\n\r\nconst  Layout=() =>{\r\n   \r\n const routes=[\r\n     {key:\"home\",component:Home},\r\n     {key:\"aboutUs\",component:AboutUs},\r\n    ];\r\n const routeValues= routes.map((route, index)=>{\r\n        return (\r\n            <Route path={`/${route.key}`} component={route.component} key={`route${index}`}></Route>\r\n        );\r\n });\r\n\r\n  return (\r\n   <div className={styles.container}>\r\n       <Switch>\r\n          {routeValues}\r\n       </Switch>\r\n   </div>\r\n  );\r\n}\r\n\r\n export default Layout;","import React from 'react';\r\nimport { Link, withRouter} from \"react-router-dom\";\r\nimport styles from \"./../styles/Menu.module.css\";\r\n\r\nconst  Menu=() =>{\r\nconst menuList=[\r\n    {path:\"/Home\", text:\"Home\"},\r\n    {path:\"/AboutUs\",text:\"AboutUs\"}\r\n];\r\nconst menusComponent= menuList.map((menu, index)=>{\r\n    \r\n    return <div className={styles.menuItem} key={index}>\r\n            <Link to={menu.path}>{menu.text}</Link>\r\n        </div>\r\n});\r\n  return (\r\n             <div className={styles.menuContainer}>\r\n                    {menusComponent}\r\n            </div>\r\n  );\r\n}\r\n\r\n export default withRouter(Menu);","// import React from 'react';\r\nimport styles from \"./../styles/Header.module.css\";\r\nimport Menu from \"./menu\";\r\n\r\nconst  PageHeader=() =>{\r\n  return (\r\n   <div className={styles.menuContainer}>\r\n       <Menu/>\r\n   </div>\r\n  );\r\n}\r\n\r\n export default PageHeader;","/**\r\n * Remove this content and start here\r\n */\r\n\r\nimport Layout from 'components/layout';\r\nimport PageHeader from 'components/pageHeader';\r\nimport React from 'react';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n// import heartFill from './assets/heart-fill.svg';\r\n// import heartStroke from './assets/heart-stroke.svg';\r\n// import styles from \"./styles/App.module.css\";\r\n\r\nconst  App=() =>{\r\n  return (\r\n    <BrowserRouter>\r\n        <PageHeader/>\r\n        <Layout/>\r\n    </BrowserRouter>\r\n    \r\n  );\r\n}\r\n\r\n export default App;\r\n","const reportWebVitals = (onPerfEntry:any) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\n export default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './bootstrap';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals(console.log);\r\n"],"sourceRoot":""}